Overleaf-Link:
    https://www.overleaf.com/17047246vrgzjpfwyrxx

Ideen fuer Klassifizierung:
>>> Notwendig:
    - Binarisieren der Bilder, da durch das reshapen/verkleinern wieder Graustufen im Bild vorhanden sind

>>> Möglichkeiten zum Klassifizieren:
    - Bilder-Daten aufeinander legen/stacken
	    --> bildet 3D Projektion
	    --> Zur besseren Lokalisierung eventuell verwenden von Template Matching für jedes neue Bild was auf den Stack gelegt wird.
	    --> Beim validieren wird das Bild auf den Stack gelegt (eventuell auch mit Template Matching) und überprüft, wie stark sich die überschneiden
    - Kantenerkennung
	    --> Kanten/Sobel-Filter etc. anwenden und überprüfen wieviele/wie lang die Kanten sind.
	    --> Nach anwenden des Filters werden die Kanten in Farbe x gefärbt. Die Anzahl dieser Pixel lässt sich Zählen und vergleichen.
    - Kantenorientierung
        --> Anwenden von h- und v-Sobel und dann abschätzen wie das Verhältnis von horizontalen zu vertikalen Kanten ist.


TODO:
>> Bessere Aufteilung in train und val
>> Fixen der Aufteilung in train und val
>> Auswerten der Image_stack-Daten
>> k-nn statt 1-nn ausprobieren
>> Auslagern der Algorithmen in Functions

Papers for CNN:

https://arxiv.org/abs/1502.03167 Batch Normalization
https://arxiv.org/abs/1705.05207 Structure for OCR of Chinese Characters
https://arxiv.org/abs/1609.04836 Large-Batch vs Small-Batch Training
